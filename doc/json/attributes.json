{
    "data": {
        "this-action": {
            "id": "this-action",
            "value": "URL",
            "description": "Indicates where the form should submit to. Value must be a URL",
            "links": [
                "this-create",
                "this-update",
                "this-url"
            ],
            "on": "forms"
        },
        "this-app-container": {
            "id": "this-app-container",
            "description": "This indicates the container to hold the app. If no element with such attribute is found, the body tag is assumed."
        },
        "this-attributes": {
            "id": "this-attributes",
            "value": "string",
            "description": [
                "Works with `this-reload`. Indicates that when clicked, the target of `this-reload` should be reloaded with the value of `this-attributes` as the target's attributes",
                "The value should contain attributes to pass onto the target in the format ATTR:VALUE. Multiple ATTR:VALUE pairs should be separated by a semi-colon (;), just like the `style` attribute."
            ],
            "on": "link elements"
        },
        "this-bind": {
            "id": "this-bind",
            "value": "string",
            "description": [
                "Binds an element and its children to a model. The value is the ID of the model",
                "All variables in the element would be parsed based on the binded model",
                "This is only required if the element is on the same page as the link that connects it to a model. If they are on different pages, `this-model` alone would suffice."
            ],
            "links": [
                "this-model",
                "this-id",
                "this-type"
            ],
            "on": "link elements, models"
        },
        "this-binding": {
            "id": "this-binding",
            "description": "Indicates that an element is bound to a model",
            "links": [
                "this-bind"
            ],
            "internal": true,
            "on": "models, forms"
        },
        "this-block-code": {
            "id": "this-block-code",
            "description": "Indicates the content is code and should be wrapped in `&lt;pre&gt;&lt;code&gt;`",
            "links": [
                "this-inline-code",
                "this-code"
            ]
        },
        "this-cache": {
            "id": "this-cache",
            "description": "Indicates a cached element",
            "internal": true
        },
        "this-code": {
            "description": "Indicates that the content should be parsed as code by replacing < with &amp;lt; and > with &amp;gt;",
            "links": [
                "this-inline-code",
                "this-block-code"
            ]
        },
        "this-component": {
            "id": "this-component",
            "value": "string",
            "description": [
                "Indicates a placeholder for a component. The value is the ID of the component to load"
            ]
        },
        "this-content": {
            "id": "this-content",
            "description": "Indicates the area to load the content into in a layout"
        },
        "this-create": {
            "id": "this-create",
            "value": [
                "URL",
                "-"
            ],
            "description": [
                "May be used together with `this-goto` or `this-bind`. It must also have a `this-model` attribute.",
                "It indicates that the target page/container is or contains a form which would create a model. This is the C in CRUD.",
                "The value can be the resource url or empty. If empty, the url would be generated autogenerated from the collection url"
            ],
            "links": [
                "this-goto",
                "this-bind",
                "this-model",
                "this-read",
                "this-update",
                "this-delete"
            ],
            "on": "link elements"
        },
        "this-current": {
            "id": "this-current",
            "description": "Indicates the current page",
            "internal": true,
            "on": "pages"
        },
        "this-data": {
            "id": "this-data",
            "value": "string - model property name",
            "on": "collections",
            "description": "This attaches the given property name to the collection, which is in a model",
            "links": [
                {
                    "label": "Collection in Model",
                    "goto": "collections&in-model"
                }
            ]
        },
        "this-dead": {
            "id": "this-dead",
            "description": "Indicates a page which is being navigated away from",
            "internal": true,
            "on": "pages"
        },
        "this-default-page": {
            "id": "this-default-page",
            "description": [
                "Indicates the page as the default page to load if no page is specified. As such, only one page should be tagged as default.",
                "Having multiple pages with the attribute throws an error and no page is loaded"
            ],
            "on": "pages"
        },
        "this-delete": {
            "id": "this-delete",
            "value": [
                "URL",
                "-"
            ],
            "description": [
                "If the element also has attribute `this-goto`, it would load the target page. If the element does not have attribute `this-goto`, the deletion is effected",
                "It must also have a `this-model` attribute.",
                "This is the D in CRUD.",
                "The value can be the resource url or empty. If empty, the url would be generated autogenerated from the collection url"
            ],
            "links": [
                "this-goto",
                "this-model",
                "this-create",
                "this-read",
                "this-update"
            ],
            "on": "link elements"
        },
        "this-do": {
            "id": "this-do",
            "value": "string",
            "description": [
                "If applied on pages, it indicates the CRUD action the page is expected to perform. This shouldn't be done manually as it is generated based on the link clicked",
                "If applied on form and value is `search`, the form becomes a search form and expects an input field with attribute `this-search`"
            ],
            "links": [
                "this-search",
                "this-query",
                "this-create",
                "this-read",
                "this-update",
                "this-delete"
            ],
            "on": "pages, forms"
        },
        "this-each": {
            "value": "string",
            "description": [
                "Indicates that the value is to be looped over. The value could be an attribute of a model/value, if the value is iteratable, a parsed variable, or a direct array.",
                "To iterate over an iterable value of a model/value, just supply the attribute name to the value WITHOUT PARENTHESIS",
                "To iterate over a parsed variable, put the variable in-between double curly brackets e.g. {{variable}}. The variable may very well be filtered as with normal variables",
                "To iterate over a direct array, surround the array with ({ and })",
                "Each loop item may be filtered with `this-filter`",
                "Within each loop, variables `key` and `value` are available."
            ],
            "on": "looping",
            "links": [
                {
                    "label": "Model Attributes",
                    "goto": "model&attributes"
                },
                "this-filter"
            ]
        },
        "this-else": {
            "id": "this-else",
            "description": [
                "Finalizes branching. Requires no value and if provided, it is ignored.",
                "Element will only remain if `this-if` and `this-else-if` expressions fail otherwise, it is removed."
            ],
            "on": "branching",
            "links": [
                "this-if",
                "this-else-if"
            ]
        },
        "this-else-if": {
            "id": "this-else-if",
            "value": "Expression",
            "description": [
                "Continues branching. Expression will only be executed if the `this-if` and previous `this-else-if` expressions fail",
                "If expression passes, the element stays in the DOM otherwise, it is removed.",
                "If this ends the branching, that is, no `this-else` is given, add attribute `this-end-if`"
            ],
            "on": "branching",
            "links": [
                "this-if",
                "this-else",
                "this-end-if"
            ]
        },
        "this-end-if": {
            "id": "this-end-if",
            "description": [
                "Indicates the end of a branching. It is only required on `this-if` or the last `this-end-if`",
                "If the brancing includes a `this-else` element, there's not need for `this-end-if` then."
            ],
            "on": "branching",
            "links": [
                "this-if",
                "this-else-if",
                "this-else"
            ]
        },
        "this-extends": {
            "id": "this-extends",
            "value": "string",
            "description": "The name of the target layout the layout is extending",
            "on": "layouts"
        },
        "this-filter": {
            "id": "this-filter",
            "value": "Expression",
            "description": [
                "The expression filters the items to display. The expression is provided with variable `current` which holds the current item in the iteration",
                "If iterating a collection, `current` has attributes `index` and `model`",
                "If iterating a loop, `current` has attributes `key` and `value`",
                "If the expression fails, the value is skipped.",
                "A function may be called in the expression. The function must however return `TRUE` or `FALSE` which indicates that the model/value should be operated on or skipped respectively",
                "Example: functionName(current)"
            ],
            "links": [
                "this-type",
                "this-each"
            ]
        },
        "this-form": {
            "id": "this-form",
            "value": "string",
            "description": [
                "This is the id of the form to target",
                "Combined with `this-create`, clicking the element prepares and opens the given form for model creation.",
                "The form must exist in the current page and would be loaded in the same page."
            ],
            "on": "link elements",
            "links": [
                "this-create",
                "this-id"
            ]
        },
        "this-go-back": {
            "id": "this-go-back",
            "description": "Navigates the app back in history",
            "on": "link elements",
            "links": [
                "this-go-forward",
                "this-go-home"
            ]
        },
        "this-go-forward": {
            "id": "this-go-forward",
            "description": "Navigates the app forward in history",
            "on": "link elements",
            "links": [
                "this-go-back",
                "this-go-home"
            ]
        },
        "this-go-home": {
            "id": "this-go-home",
            "description": "Navigates the app to the home page",
            "on": "link elements",
            "links": [
                "this-go-back",
                "this-go-forward"
            ]
        },
        "this-goto": {
            "id": "this-goto",
            "value": "string",
            "description": "When clicked, loads the target page. The value is ID of the page",
            "on": "link elements",
            "links": [
                "this-create",
                "this-read",
                "this-update",
                "this-delete"
            ]
        },
        "this-hidden": {
            "id": "this-hidden",
            "description": "Makes the element hidden by default",
            "links": [
                "this-show",
                "this-hide"
            ]
        },
        "this-hide": {
            "id": "this-hide",
            "value": "string",
            "description": [
                "When clicked, hides the target element. The value is the ID of the element.",
                "Multiple elements can also be targeted by separating their IDs with comma"
            ],
            "links": [
                "this-show",
                "this-toggle"
            ],
            "on": "link elements"
        },
        "this-id": {
            "id": "this-id",
            "value": "string",
            "description": "The ID of the element type",
            "links": [
                "this-type"
            ]
        },
        "this-if": {
            "id": "this-if",
            "value": "Expression",
            "description": [
                "Starts branching. The value should be the logical expression to check",
                "This can be used with `this-else-if` and/or `this-else`. If neither is required, this must also have `this-end-if`",
                "If the expression passes, then the element stays and `this-else-if` and `this-else` elements are removed."
            ],
            "on": "branching",
            "links": [
                "this-else-if",
                "this-else",
                "this-end-if"
            ]
        },
        "this-ignore": {
            "id": "this-ignore",
            "description": "Used to temporarily ignore children branching when processing parent branching",
            "internal": true,
            "on": "branching",
            "links": [
                "this-if",
                "this-else-if",
                "this-else"
            ]
        },
        "this-ignore-cache": {
            "id": "this-ignore-cache",
            "value": "string",
            "description": [
                "Used with `this-goto`, it indicates that the target should not be loaded from cache but from the server",
                "The value would be in the format TYPE#ID e.g. collection#users"
            ],
            "links": [
                "this-goto"
            ],
            "on": "link elements"
        },
        "this-ignore-submit": {
            "id": "this-ignore-submit",
            "description": "Indicates that the form should not be processed when submitted",
            "links": [
                "this-create",
                "this-update"
            ],
            "on": "forms"
        },
        "this-in-collection": {
            "id": "this-in-collection",
            "description": "Indicates that a model element is within a collection element",
            "internal": true,
            "on": "models"
        },
        "this-inline-code": {
            "id": "this-inline-code",
            "description": "Indicates the content is code and should be wrapped in `&lt;code&gt;`",
            "links": [
                "this-block-code",
                "this-code"
            ]
        },
        "this-is": {
            "id": "this-is",
            "value": "string",
            "description": [
                "Bind a key of the model to the form element. The value should be the key of the model.",
                "If the value of the key is an object or array, children value can be targeted by connecting the keys with dots (.).",
                "For example, say there's an object `{name:{first:\"John\", last:\"Doe\"},hobbies:[\"Reading\",\"Playing the guitar\"]}`, `this-is` values could be `name.first`, `name.last`, `hobbies.0`, `hobbies.1`",
                "The form must be bound to a model with attribute `this-model`."
            ],
            "this-links": [
                "this-model"
            ],
            "on": "forms, input, select, textarea, button"
        },
        "this-layout": {
            "id": "this-layout",
            "value": "string",
            "description": "The layout a page should use. If none is specified, the general app layout is used if specified. And if that isn't specified either, the page is loaded without a layout.",
            "on": "pages",
            "links": [
                "this-type"
            ]
        },
        "this-load-css": {
            "id": "this-load-css",
            "value": "string",
            "description": "Loads the given css file into the page.",
            "on": "pages, layouts",
            "links": [
                "javascript&config"
            ]
        },
        "this-load-js": {
            "id": "this-load-js",
            "value": "string",
            "description": "Loads the given js file after the page has been loaded",
            "on": "pages, layouts",
            "links": [
                "javascript&config"
            ]
        },
        "this-load-js-first": {
            "id": "this-load-js-first",
            "value": "string",
            "description": "Loads the given js file before the page is loaded",
            "on": "pages, layouts",
            "links": [
                "javascript&config"
            ]
        },
        "this-loaded": {
            "id": "this-loaded",
            "description": "Indicates a loaded element",
            "internal": true,
            "on": "layouts, pages, components, collections, models, links, scripts",
            "links": [
                "this-model",
                "this-type"
            ]
        },
        "this-mid": {
            "id": "this-mid",
            "value": [
                "integer",
                "string"
            ],
            "description": "The unique id of a particular model.",
            "links": [
                "this-model"
            ],
            "on": "models"
        },
        "this-model": {
            "id": "this-model",
            "value": "string",
            "description": "The name of the model to bind an element to",
            "links": [
                "this-bind"
            ]
        },
        "this-model-uid": {
            "id": "this-model-uid",
            "value": "string",
            "description": [
                "The name of the model key which serves as the unique identifier. Every element with `this-model` should have one.",
                "If none is specified, `id` is assumed"
            ],
            "links": [
                "this-uid",
                "this-model"
            ]
        },
        "this-not-with": {
            "id": "this-not-with",
            "value": "string",
            "description": [
                "This indicates the container's content should not be loaded with the containers parent model",
                "The value is the id of the model"
            ],
            "links": ["this-type"]
        },
        "this-page-title": {
            "id": "this-page-title",
            "value": "string",
            "description": [
                "Used on links with `this-goto`, it holds the title for the target page",
                "If the page already has a `this-title` attribute, it is overriden"
            ],
            "links": [
                "this-goto",
                "this-title"
            ],
            "on": "link elements"
        },
        "this-prepend-new": {
            "id": "this-prepend-new",
            "description": "Indicates that new models should be prepended to the collection listing instead of appended, which is the default",
            "on": "collections"
        },
        "this-query": {
            "id": "this-query",
            "value": "string",
            "description": "Holds the string being searched for when a search is performed",
            "links": [
                "this-do",
                "this-search"
            ],
            "on": "pages"
        },
        "this-read": {
            "id": "this-read",
            "description": "Used together with `this-goto` and within a model, it indicates that the page would read the model within which is the current element. This is the R in CRUD.",
            "links": [
                "this-goto",
                "this-create",
                "this-update",
                "this-delete"
            ],
            "on": "pages"
        },
        "this-reading": {
            "id": "this-reading",
            "description": "Indicates that the page is reading from a model",
            "internal": true,
            "on": "pages"
        },
        "this-reload": {
            "id": "this-reload",
            "value": "string",
            "description": [
                "When clicked, the target should be reloaded. To be reloaded, `this-attributes` must be applied",
                "If no value is specified, the page, layouts and all resources are reloaded"
            ],
            "on": "link elements",
            "links": [
                "this-attributes",
                "this-reload-page",
                "this-reload-layouts"
            ]
        },
        "this-reload-page": {
            "id": "this-reload-page",
            "description": "Reloads the page only",
            "on": "link elements",
            "links": [
                "this-attributes",
                "this-reload",
                "this-reload-layouts"
            ]
        },
        "this-reload-layouts": {
            "id": "this-reload-layouts",
            "value": "string",
            "description": "Reloads the page and loaded layouts",
            "on": "link elements",
            "links": [
                "this-attributes",
                "this-reload",
                "this-reload-page"
            ]
        },
        "this-search": {
            "id": "this-search",
            "value": "string",
            "description": [
                "Input element must have `this-do` with value of 'search'",
                "The value is a string in the format COLLECTION_ID:comma,separated,keys,to,search"
            ],
            "links": [
                "this-do",
                "this-query"
            ],
            "on": "forms, input"
        },
        "this-show": {
            "id": "this-show",
            "value": "string",
            "description": [
                "Shows the target element. The value is the ID of the element.",
                "Multiple elements can also be targeted by separating their IDs with comma"
            ],
            "links": [
                "this-hide",
                "this-toggle"
            ],
            "on": "link elements"
        },
        "this-tar": {
            "id": "this-tar",
            "value": "string",
            "description": "Temporary attribute which holds other attributes. This is given to a template element. When the template is parsed, the attribute value is parsed and passed on to the parsed element after which it is removed",
            "internal": true
        },
        "this-title": {
            "id": "this-title",
            "value": "string",
            "description": "Holds the title of the page",
            "links": [
                "this-page-title"
            ],
            "on": "pages"
        },
        "this-toggle": {
            "id": "this-toggle",
            "value": "string",
            "description": "Toggles the display of the target element on/off. The value is the ID of the element.",
            "links": [
                "this-show",
                "this-hide"
            ],
            "on": "link elements"
        },
        "this-type": {
            "id": "this-type",
            "value": [
                "page",
                "model",
                "collection",
                "component",
                "layout",
                "..."
            ],
            "description": "Indicates the type of container an element is",
            "on": "pages, models, collections, components, layouts"
        },
        "this-update": {
            "id": "this-update",
            "value": [
                "URL",
                "-"
            ],
            "description": [
                "Used together with `this-goto` and within a model, it indicates that the page is, or contains, a form which would update the model within which is the current element. This is the U in CRUD.",
                "The value can be the resource url or empty. If empty, the url would be generated autogenerated from the collection url"
            ],
            "links": [
                "this-goto",
                "this-model",
                "this-create",
                "this-read",
                "this-delete"
            ],
            "on": "link elements"
        },
        "this-uid": {
            "id": "this-uid",
            "value": "string",
            "description": "The name of the model key which serves as the unique identifier. This is only found on model elements",
            "links": [
                "this-model"
            ],
            "on": "models"
        },
        "this-url": {
            "id": "this-url",
            "value": "string",
            "description": "The url to the resource to load into the element or to send the form data to",
            "links": [
                "this-model"
            ],
            "on": "models, collections, forms"
        },
        "this-with-css": {
            "id": "this-with-css",
            "description": "Indicates that the elem has custom css files loaded with it",
            "on": "layouts, pages",
            "links": [
                "this-load-css"
            ],
            "internal": true
        },
        "this-with-first-js": {
            "id": "this-with-first-js",
            "description": "Indicates that the elem has custom js files loaded with it before the page was loaded",
            "on": "layouts, pages",
            "links": [
                "this-load-js-first"
            ],
            "internal": true
        },
        "this-with-js": {
            "id": "this-with-js",
            "description": "Indicates that the elem has custom js files loaded with it after the page was loaded",
            "on": "layouts, pages",
            "links": [
                "this-load-js"
            ],
            "internal": true
        }
    },
    "expires": 1800
}