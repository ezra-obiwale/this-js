[
    {
        "id": "collection.model.render",
        "description": [
            "Called before each model in a collection is rendered. The context is the HTMLElement of the model to be rendered.",
            "The function receives two (2) parameters - the object to be loaded into the collection and the HTMLElement of the collection",
            "The expected return is either an object which overrides the given object or a boolean where false means rendering should continue with the received data",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "collection.render",
        "description": [
            "Called before collections are rendered. The context is the HTMLElement of the collection.",
            "The function receives a parameter - the object to be loaded as a collection",
            "The expected return is either an object which overrides the given object or a boolean where false means rendering should continue with the received data",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "form.send",
        "description": [
            "Called when a form that's not bound to any model but has attribute `this-handle-submit` is submitted with valid field entries.",
            "The context is the form which was submitted",
            "The expected return is either an object which appended to the form data before sending the request or a boolean where false means sending should be canceled.",
            "If an object is returned, existing data in the form may be overwritten if keys exist as names",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "model.create",
        "description": [
            "Called before a create request is sent after a form is submitted.. The context is the form which was submitted or passed into `save()`.",
            "The function receives a parameter - the data object passed into `save().`",
            "The expected return is either an object which appended to the form data before sending the request or a boolean where false means sending should be canceled.",
            "If an object is returned, existing data in the form may be overwritten if keys exist as names",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "model.delete",
        "description": [
            "Called before a delete request is sent on a model. The context is the HTMLElement of the model within which the delete button was clicked.",
            "The expected return is a boolean where false means rendering should continue with the received data",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "model.update",
        "description": [
            "Called before an update request is sent after a form is submitted. The context is the form which was submitted or passed into `save()`.",
            "The function receives a parameter - the data object passed into `save()`",
            "The expected return is either an object which appended to the form data before sending the request or a boolean where false means sending should be canceled.",
            "If an object is returned, existing data in the form may be overwritten if keys exist as names",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "model.render",
        "description": [
            "Called before models are rendered. The context is the HTMLElement of the model.",
            "The function receives a parameter - the object to be loaded as the model.",
            "The expected return is either an object which overrides the given object or a boolean where false means rendering should continue with the received data",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "page.leave",
        "value": "function",
        "description": [
            "Called before a page is moved away from. The context is the HTMLElement of the page.",
            "The expected return is boolean where false means rendering should continue with the received data",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    },
    {
        "id": "page.load",
        "description": [
            "Called before pages are loaded.",
            "The function receives a single parameter - the id or url of the page to load",
            "The expected return is boolean where false means the page should not be loaded.",
            "Where the function returns nothing, boolean `TRUE` is assumed."
        ]
    }
]